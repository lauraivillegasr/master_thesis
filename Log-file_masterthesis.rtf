{\rtf1\ansi\ansicpg1252\cocoartf2576
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset0 .AppleSystemUIFontMonospaced-Regular;
\f3\fnil\fcharset0 Monaco;\f4\fnil\fcharset0 HelveticaNeue;\f5\fnil\fcharset0 .AppleSystemUIFontMonospaced-Bold;
\f6\fnil\fcharset0 Geneva;\f7\fmodern\fcharset0 Courier;\f8\fnil\fcharset0 AppleColorEmoji;
\f9\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;\red4\green41\blue57;
\red27\green31\blue34;\red14\green0\blue45;\red27\green29\blue31;\red0\green0\blue0;\red205\green205\blue205;
\red203\green35\blue57;\red1\green20\blue69;\red179\green179\blue179;\red26\green26\blue26;\red255\green255\blue255;
\red24\green25\blue27;\red252\green33\blue24;\red26\green28\blue31;\red252\green73\blue64;\red35\green38\blue42;
\red180\green36\blue25;\red38\green38\blue38;\red27\green31\blue35;\red10\green58\blue158;\red194\green11\blue35;
\red244\green246\blue249;\red47\green189\blue29;\red137\green60\blue120;\red60\green95\blue255;\red39\green123\blue69;
}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c0\c0;\cssrgb\c0\c21366\c28831;
\cssrgb\c14118\c16078\c18039;\cssrgb\c6643\c1990\c23261;\cssrgb\c14118\c15294\c16078;\cssrgb\c0\c0\c0;\csgray\c84070;
\cssrgb\c84314\c22745\c28627;\cssrgb\c0\c11664\c34131;\csgray\c75407;\cssrgb\c13333\c13333\c13333;\cssrgb\c100000\c100000\c100000;
\cssrgb\c12549\c12941\c14118;\cssrgb\c100000\c23177\c11601;\cssrgb\c13725\c14902\c16078;\cssrgb\c100000\c38374\c31601;\cssrgb\c18431\c20000\c21569;
\cssrgb\c76409\c21698\c12524;\cssrgb\c20000\c20000\c20000;\cssrgb\c14118\c16078\c18431;\cssrgb\c1961\c31373\c68235;\cssrgb\c81176\c13333\c18039;
\cssrgb\c96471\c97255\c98039;\cssrgb\c20011\c76928\c14710;\cssrgb\c61176\c32157\c54510;\cssrgb\c29814\c47883\c100000;\cssrgb\c18039\c54510\c34118;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww21640\viewh12800\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\qc\partightenfactor0

\f1\b\fs36 \cf4 https://github.com/lauraivillegasr/master_thesis.git\
\
\
PRE-PROCESSING OF DATA
\fs24 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 \
#make separate CHEOPS software accessible:\
module use /opt/rrzk/modules/experimental\
\
\
1. Trimming using fastp. Info not he tool: \
\
\pard\pardeftab720\partightenfactor0
\cf5 \expnd0\expndtw0\kerning0
\CocoaLigature1 fastp -i forward.fq.gz -I reverse.fq.gz -o out.forward.fastq -O out.reverse.fastq\cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\
\
2. Mapping to reference genome via bwa mem\
\
	2.1 Create index for mapping: \
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
\CocoaLigature1 	bwa index ref.fa\
\
	2.2 Mapping: \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
	bwa mem -M -t 30 -R \'93@RG\\tID:sample-id\\tSM:sample\\tPL:ILLUMINA\\tPU:1\'94 /path/to/reference-genome.fasta \cf5 \expnd0\expndtw0\kerning0
\CocoaLigature1 out.forward.fastq out.reverse.fastq\cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0  > sample-1_bwamem.sam \
\pard\pardeftab720\partightenfactor0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\
3. Creating list for looping further analysis\
  \
 #create file list\
	ls -1 | sed 's/_bwamem.sam//g' > list-XX\
\
4. Convert sam to bam and sort files\
\
\
ls -1 | sed 's/_bwamem.sam//g' > list-XX\
while read f; do samtools view -b $f"_bwamem.sam" > $f".bam" ;done < list-XX\
\
\
cat list-hln | parallel -j 12 'samtools sort -@ 4 -o \{\}bwamem.sort.bam \{\}.sam'\
\
\
5. Indexing sorted bam files \
\
 	ls *.sort.bam | parallel samtools index '\{\}'\
	\
6. quality statistics of your mappings via qualimap. Info on the tool  http://qualimap.conesalab.org/\
	#create data-description-file for multi-bamqc\
	ls -d -1 $PWD/** | grep sort.bam$ > qualimap.list  ### requires additional manual editing - I used nano editor\
\
	#example:\
\
NAME         PATH						                          GROUP   #header is not part of the list. List should be tab delimited\
c12_JU_100	/scratch/lvilleg1/MAL/c12_JU_100bwamem.sort_stats       c12_JU_100\
c12_JU_47	/scratch/lvilleg1/MAL/c12_JU_47bwamem.sort_stats        c12_JU_47\
c12_JU_60	/scratch/lvilleg1/MAL/c12_JU_60bwamem.sort_stats        c12_JU_60\
\
\
\
	qualimap multi-bamqc -r -d qualimap.list --java-mem-size=2400M #mem size needs to be edited as default 1220M was not enough for the data used\
\
7. Removing duplicates with picard tools. Info on the tool: https://broadinstitute.github.io/picard/\
\
		while read f; do java -jar picard.jar MarkDuplicatesWithMateCigar I=$f".sort.bam" O=$f".sort.rmd.bam" M=$f"sort.bam.metrics" VALIDATION_STRINGENCY=SILENT MINIMUM_DISTANCE=300 REMOVE_DUPLICATES=true & done < list\
\
#command line on Picard is changing, a new command could be needed like this in the future: MarkDuplicatesWithMateCigar -I  filebwamem.sort.bam -O file.sort.rmd.bam -M sort.bam.metrics -VALIDATION_STRINGENCY SILENT -MINIMUM_DISTANCE 300 -REMOVE_DUPLICATES true \
\
\
8. Filtering the data to keep just quality higher than 30:\
\
	samtools view -q 30 -b in.bam > aligned_reads.q30.bam\
\pard\pardeftab720\partightenfactor0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
9.A. Gatk haplotypecaller. Info on the tool: https://gatk.broadinstitute.org/hc/en-us/articles/360037225632-HaplotypeCaller\
\
\
	9.A.1 Indexing files after filtering\
		 ls *.bam | parallel samtools index '\{\}'\
\
	9.A.2 Haplotype calling \
		gatk HaplotypeCaller -R reference_genomes/panagrolaimus_es5.PRJEB32708.WBPS15.genomic.fa -I filesq30/P_bromber.sort.rmd.q30.bam -O P-bromber.vcf\
\
\
		
\f1\b ADDITIONAL INFORMATION ON PRE-PROCESSING: 
\f0\b0 \
\
			1. For p_superbus I used NGM - reads shorter than 70bp. Info on the tool: https://github.com/Cibiv/NextGenMap/wiki\
\
				1.1 Create index for mapping:\
\pard\pardeftab720\partightenfactor0
\cf5 \expnd0\expndtw0\kerning0
\CocoaLigature1 				ngm -r reference-sequence.fa\
\
			1.2 Mapping: \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\cf5 \expnd0\expndtw0\kerning0
\CocoaLigature1 				ngm -r reference-sequence.fa -1 forward_reads.fq -2 reverse_reads.fq -o results.sam \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 			2. For files with insert size smaller than double read lenght I used pear. Info on the tool: https://cme.h-its.org/exelixis/web/software/pear/doc.html#cl-main\
\
				pear -f forwardread.sanfastq.gz -r reverseread.sanfastq.gz -o pearoutputname\
				\
				pear output gives: file.unassembled.forward.fastq, file.unassembled.reverse.fastq, file.assembled.forward.fastq file.assembled.reverse.fastq and discarded reads\
\
				Mapping for this files was done twice: once for assembly and once for unassembled reads and then they were merged. \
\
				bwa mem -M -t 30 -R "@RG\\tID:ASEX\\tSM:PS1806\\tPL:ILLUMINA\\tPU:1" /path/to/reference-genome.fasta file.unassembled.forward.fastq file.unassembled.reverse.fastq > mapped_unassembledpear.sam  #no extra indexing required, as the same index from previous mapping could be used\cf5 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\partightenfactor0
\cf5 \
\cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 After re-mapping in either case, all steps from pre-processing were followed again. \
\pard\pardeftab720\partightenfactor0

\f1\b \cf6 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\qc\partightenfactor0

\fs36 \cf6 ESTIMATION OF MUTATION RATES 
\fs24 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\
Installing accuMulate gave some problems. Remember to add the path of bamtools folder to my path using `
\f0\b0 \cf7 \expnd0\expndtw0\kerning0
\CocoaLigature1 export PATH=$PATH:/your/new/path/here
\f1\b \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 `\
\
For creating ref pool of PS1159 more reads were added, they had solexa encoding and were transformed to Sanger encoding using: \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 cat 110815_0133_D0738ACXX_5_SA-PE-005_1.solfastq | seqret -filter -auto -sformat fastq-solexa -osformat fastq-sanger -out PS1159_5_1.fastq\
\
All reads coming from PS1159 where merged\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b \
We checked through fastqc to estimate/know wether the conversion worked: the result showed: SANGER :D\
\
\
Trimming\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 \
./fastp -i /scratch/a200302/L19G31/SN7640087_3184_L19G31_1_sequence.fq.gz  -I /scratch/a200302/L19G31/SN7640087_3184_L19G31_2_sequence.fq.gz -o /scratch/lvilleg1/L19G31_1 -O /scratch/lvilleg1/L19G31_1 -h /scratch/lvilleg1/report_L19G31\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b Mapping
\f0\b0 \
\
/home/lvilleg1/bwa-0.7.12/bwa mem -M -t 30 -R "@RG\\tID:ASEX\\tSM:PS1159_c12_PS_8\\tPL:ILLUMINA\\tPU:1" /home/lvilleg1/reference_genomes/panagrolaimus_ps1159.PRJEB32708.WBPS15.genomic.fa.gz /scratch/lvilleg1/MAL_fastp/c12_PS_8_1 /scratch/lvilleg1/MAL_fastp/c12_PS_8_2 > /scratch/lvilleg1/c12_PS_8_bwamem.sam\
\

\f1\b Convert sam to bam
\f0\b0 \
\
\
ls -1 | sed 's/_bwamem.sam//g' > list-XX\
while read f; do samtools view -b $f"_bwamem.sam" > $f".bam" ;done < list-XX\
\
Sort files \
\
samtools sort -o /scratch/lvilleg1/MAL/L19G31.sort.bam scratch/lvilleg1/MAL/L19G31.bam #had to be run independently on each file, after a whole day command with parallel was not running\
\
Learn about coverage from sorted files\
\
ls *.sort.bam | parallel -j 5 'samtools depth \{\} > \{\}.sort.bam.depth' \
\

\f1\b Remove duplicates using picard
\f0\b0 \
\
\
module purge #remove the current default java version\
module load openjdk/1.8.0_202 #need to be loaded, otherwise it tries to run with the incorrect java version and won\'92t work \
\
\
cd /scratch/lvilleg1/MAL/\
\
java -jar /home/lvilleg1/picard/build/libs/picard.jar MarkDuplicatesWithMateCigar I=/scratch/lvilleg1/MAL/c12_PS_86.sort.bam O=c12_PS_86.sort.rmd.bam M=c12_PS_86.sort.bam.metrics VALIDATION_STRINGENCY=SILENT MINIMUM_DISTANCE=300 REMOVE_DUPLICATES=true\
\

\f1\b Remove low quality reads 
\f0\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf8 \
\pard\pardeftab720\partightenfactor0
\cf8 \expnd0\expndtw0\kerning0
\CocoaLigature1 \shad\shadx0\shady-20\shadr0\shado255 \shadc0 ls *\kerning1\expnd0\expndtw0 \CocoaLigature0 \shad0 .sort.rmd.bam\expnd0\expndtw0\kerning0
\CocoaLigature1 \shad\shadx0\shady-20\shadr0\shado255 \shadc0  | parallel 'samtools view -q 30 -b \{\} > \{.\}.q30\'92\
\
\pard\pardeftab720\partightenfactor0
\cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 \shad0 \
Samtools flagstat can be used to check quality of mapping \
\pard\pardeftab720\partightenfactor0

\f1\b I\cb9 ndexing files for haplotype caller - maybe ignore\
\pard\pardeftab720\partightenfactor0

\f0\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
ls *.sort.rmd.q30.bam | parallel samtools index '\{\}'\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b Creating dictionary of reference genome - maybe ignore
\f0\b0 \
\
/home/lvilleg1/gatk-4.2.0.0/gatk CreateSequenceDictionary -R /home/lvilleg1/reference_genomes/panagrolaimus_ps1159.PRJEB32708.WBPS15.genomic.fa\
\

\f1\b Haplotype calling - maybe ignore
\f0\b0 \
\
/home/lvilleg1/gatk-4.2.0.0/gatk HaplotypeCaller -R /home/lvilleg1/reference_genomes/panagrolaimus_ps1159.PRJEB32708.WBPS15.genomic.fa -I /scratch/lvilleg1/MAL/Final_preprocessing/referencepoolPS1159.sort.rmd.q30.bam -O /scratch/lvilleg1/MAL/Final_preprocessing/referencepoolPS1159.vdcf\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cb3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b To check that the header is correctly stablished\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 samtools view -H c12_JU_100.sort.rmd.bam | grep '^@RG'\
for f in *q30.bam ; do samtools view -H $f | grep '^@RG'; done\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b Merging files for accuMUlate \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 samtools merge -r partheno_merged.bamL19G31.sort.rmd.q30.bam PS83Q.sort.rmd.q30.bam c12_PS_22.sort.rmd.q30.bam c12_PS_8.sort.rmd.q30.bam c12_PS_84.sort.rmd.q30.bam c12_PS_86.sort.rmd.q30.bam\
\
c12_JU_100.sort.rmd.q30.bam c12_JU_47.sort.rmd.q30.bam c12_JU_60.sort.rmd.q30.bam c12_JU_71.sort.rmd.q30.bam c12_JU_73.sort.rmd.q30.bam c12_JU_88.sort.rmd.q30.bam
\f1\b \

\f0\b0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b Prepare data for accumulate, obtain ini file and obtain GC content using accumulate tools (pre-requisite: 
\f0\b0 pip3.6 install biopython
\f1\b ) ALL THINGS THAT NEEDED PYTHON WHERE SUBMITTED TO CHEOPS0 - note on installing boost for accuMUlate: version 1.73 wouldn\'92t work, I used 1.62\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 module load samtools\
module load python/3.6.8\
cd /scratch/lvilleg1/MAL/Final_preprocessing\
\
samtools view -H parthenoPS1159_merged.bam | python3 /home/lvilleg1/accuMulate-tools/extract_samples.py PS1159_refpool - >> params.PS1159.ini\
\
\pard\pardeftab720\partightenfactor0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\
python3 /home/lvilleg1/accuMulate-tools/GC_content.py /home/lvilleg1/reference_genomes/PS1159_reference_genome >> params.PS1159.ini
\f1\b \
\
\
NOTE: CHEOPS ONLY allows to install Biopython on python 3 using pip, however, the scripts of accu-tools are written for python 2. Had to do some editing on printing statement (adapt it to python3 - was written in python2):\
\
before: \
\
\

\f0\b0  print "\{\}\\t\{\}".format(*pair)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b After:
\f0\b0 \
 print ("\{\}\\t\{\}".format(*pair))
\f1\b \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 python3 /home/lvilleg1/accuMulate-tools/\cf5 \expnd0\expndtw0\kerning0
\CocoaLigature1 dictionary_converter.py \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/lvilleg1/reference_genomes/panagrolaimus_ps1159.PRJEB32708.WBPS15.genomic.fa \cf5 \expnd0\expndtw0\kerning0
\CocoaLigature1  \cf10 >\cf5  \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/lvilleg1/reference_genomes/panagrolaimus_ps1159.PRJEB32708.WBPS15.genomic.dict\
\
\pard\pardeftab720\partightenfactor0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b \
FOLLOWING STEP ON CHEOPS1 WHERE BEDTOOLS IS AVAILABLE\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 \
module load /opt/rrzk/modules/experimental/bedtools/2.29.2 (bedtools on cheops1)\
\
\pard\pardeftab720\partightenfactor0
\cf5 \expnd0\expndtw0\kerning0
\CocoaLigature1 mkdir -p \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 /scratch/lvilleg1/MAL/Final_preprocessing/\cf5 \expnd0\expndtw0\kerning0
\CocoaLigature1 tmp\
\
\
bedtools makewindows -g \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/lvilleg1/reference_genomes/panagrolaimus_ps1159.PRJEB32708.WBPS15.genomic.accu.dict\cf5 \expnd0\expndtw0\kerning0
\CocoaLigature1  -w 100000 | split -l 1 - \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 /scratch/lvilleg1/MAL/Final_preprocessing/\cf5 \expnd0\expndtw0\kerning0
\CocoaLigature1 tmp
\f1\b \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 \cb1 \
\
When using n=3 ```terminate called after throwing an instance of 'boost::program_options::invalid_option_value'\
  what():  the argument ('accuMUlate can't only deal with haploid or diploid ancestral samples') for option is invalid```\
\
\
En este momento el archivo es 
\f1\b 2parthenoPS1159_merged.bam 
\f0\b0 y los parametros son
\f1\b  trial.parms\

\f0\b0 \
\pard\pardeftab720\partightenfactor0
\
\pard\pardeftab720\partightenfactor0

\f1\b Running accumulate: \
\
A change had to be done on the parsers.cc file from accuMUlate. \
\
\pard\pardeftab720\partightenfactor0

\f0\b0 1. As the error was coming from the condition of the if defined in line XXX not being fulfilled, we added a print statement that would show exactly what the error was: 
\f1\b \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 std::cout << "HOLA SOY LAURA***********: " << start_index; -> prints the start_index that is problematic\
\
2. We add a statement that tells the script to ignore this specific index so the if condition can be fulfilled. \
\
if (start_index != std::string::npos 
\f1\b || start_index == 18446744073709551615
\f0\b0 ) \{\
\
What is 
\f1\b 18446744073709551615? 
\f0\b0 Is probably a value defined as a maximum by boost (when not specified differently), one of the tools used by accuMUlate. I think it is plausible that the error is this definition of maximum and not on the data itself as 4 different data sets where tested and the error persisted the same \'b4
\f1\b 18446744073709551615
\f0\b0 \'b4
\f1\b  \
\
AccuMUlate was then compiled again with the new \'93version\'94 of the parsers.cc file.\
\
The command implemented for obtaining candidate mutations was: \
On CHEOPS1\
\

\f0\b0 parallel -j 6 home/lvilleg1/accuMUlate-0.2.1/build/accuMUlate -c /scratch/lvilleg1/accu_JU/params.JU765.ini -b /scratch/lvilleg1/accu_JU/hermaphroJU765_merged.sort.bam -r /scratch/lvilleg1/accu_JU/propanagrolaimus_ju765.PRJEB32708.WBPS15.genomic.fa -i \{\} ::: /scratch/lvilleg1/accu_JU/tmp/* > /scratch/lvilleg1/JU765_mutationcandidates #if -o is used to write the output, it goes to the .out file defined on the job batch script. \
\
\
After obtaining the candidate mutations, filtering stars: \
\
1. Define coverage range: \
\
With samtools depth we obtain a file with coverage at several positions, on R we can get the summary statistics for knowing the lower and upper range. We used 2 times the standard deviation of the ref pool for its upper limit: sd(file$V3)\
\
Filtering was done following the code: \
\
The value for $11 changed according to the coverage range defined for the specific data set. \
\
cat PS1159_mutationcandidates | awk '\{if ($11 >=332 && $11 <=575 && $15 ==0 && $7 >=0.9 && $8 >=0.9 && $9 >=0.9 && $16 <=1.96 && $17 <=1.96 && $18 >=0.05 && $19 >=0.05) print $0\}' > PS1159_mutationcandidates.filter-A.bed\
\
cat PS1159_mutationcandidates | awk '\{if ($11 >=332 && $11 <=575) print $0\}' | wc -l \

\f1\b \

\f0\b0 cat PS1159_mutationcandidates | awk '\{if ($11 >=332 && $11 <=575 && $15 ==0) print $0\}' | wc -l\
\
cat PS1159_mutationcandidates | awk '\{if ($11 >=332 && $11 <=575 && $15 ==0 && $7 >=0.9 && $8 >=0.9 && $9 >=0.9) print $0\}' | wc -l\

\f1\b \

\f0\b0 cat PS1159_mutationcandidates | awk '\{if ($11 >=332 && $11 <=575 && $15 ==0 && $7 >=0.9 && $8 >=0.9 && $9 >=0.9 && $16 <=1.96 && $17 <=1.96) print $0\}' | wc -l\
\
\
2. We obtained the number of callable sites for each of the lines. We used the already obtained depth files from samtools depth filename.bam > filename.depth\
\
cat L19G31.sort.bam.sort.bam.depth | awk '\{if ($3 >=10 && $3 <=50) print $0\}' | wc -l \
\
\

\f1\b Obtaining mutation rates and confidence intervals: \
\

\f0\b0 1. For mutation rates the following equation was used for each of the mutation lines: \
\
\pard\pardeftab720\qc\partightenfactor0
\cf8 \expnd0\expndtw0\kerning0
\CocoaLigature1 \uc0\u956 =(called mutations)/(generations\u8727 callable sites)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
2. Average of \cf8 \expnd0\expndtw0\kerning0
\CocoaLigature1 \uc0\u956  for each of the strains was calculated. (Can\'92t insert equation, basically all \u956  divided the total number of \u956  for the strain). \
\
3. Estimation of confidence intervals: \
\
Downloading Bayesian first aid on R\
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 install.packages("devtools")\
devtools::install_github("rasmusab/bayesian_first_aid")\
\
NOTE: as I was working on a Mac computer, an error on installation or jags occurred (package required for bayesian_first_aid). I directly downloaded the package from https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/Mac%20OS%20X/ and installed it before installing bayesian_first_aid. \
\
\
JU_sex = c(1.62637E-09, 6.4472E-10, 1.60744E-09, 5.93941E-10, 1.17891E-09)\
PS_asex =c(9.64506E-10, 6.94089E-10, 4.08937E-10, 7.2004E-10, 7.9846E-10)\
comparing= c(9.41896E-10, 5.67965E-10)\
sites = c(278665301,374228169)\
bayes.poisson.test(comparing, sites)\
plot(bayes.poisson.test(comparing, sites))\
\
Sites refers to the number of callable sites for each reproduction mode. The result of this analysis tells us how different our groups are and provides confidence intervals of the values: a lower limit and an upper limit.\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 perl popoolation_1.2.2/Variance-sliding.pl --measure theta --input Sex_network/P_bromber.pileup --output Sex_network/P_bromber_WT.file --pool-size 1000 --min-count 2 --min-coverage 10 --window-size 10000 --step-size 1000 --fastq-type sanger\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs36 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\qc\partightenfactor0

\f1\b \cf6 POPULATION ANALYSIS USING POPOOLATION AND POPOOLATION2
\f0\b0\fs24 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\

\f1\b Population analysis using Popoolation: remember to specify -fastq-type!\
\

\f0\b0 The sorted final bam files are used as initial input for the tool. \
\
1. Creating pileup file for (A) individual files (further estimation of pi, theta) and (B) merged files (for Fst estimation)\
\
(A)samtools mpileup P_bornheim.sort.rmd.q30.bam > P_bornheim.pileup\
(B)samtools mpileup -B -b list-samtoolpileup_sex > sexpop.mpileup\
\
B. Creating syncronized files for further estimations \
\
java -ea -Xmx7g -jar popoolation2_1201/mpileup2sync.jar --input Sex_network/asexpop.mpileup --output Sex_network/asexpop_java.sync --fastq-type sanger \'97min-qual 30 --threads 4\
\
B.1. Fst estimated on sliding window non overlapping \'97> to compare populations amongst each other\
\
perl popoolation2_1201/fst-sliding.pl --input Sex_network/asexpop_java.sync  --output Sex_network/asexpop_w1kb_corrected.fst  --suppress-noninformative --min-count 4 --min-coverage 10 --max-coverage 80 --min-covered-fraction 0,5 --window-size 1000 --step-size 1000 --pool-size 3000\
\
B.1.2 Extracting values of Fst from all columns - needs to be done one at a time\
\
awk '\{ gsub(/1:2=/,"", $6); print \} ' filename > newfilename\
\
\
B.2. Fst estimation on single positions to obtain common positions between all populations (asex as a group and sex as another)\
\
perl popoolation2_1201/fst-sliding.pl --input Sex_network/asexpop_java.sync  --output Sex_network/asexpop_w1kb_corrected.fst  --suppress-noninformative --min-count 4 --min-coverage 10 --max-coverage 80 --min-covered-fraction 0,5 --window-size 1 --step-size 1 --pool-size 3000\
\
B.2.1 From fst per portion, grab only the first two columns that have the information on contain and position present in all pops\
\
awk \cf0 \CocoaLigature1 '\{print $1, $2 \}' file > positions_asex\
			\
A.1. With he positions file obtained in B.2.1, common positions between all populations were extracted on the individual pileup files using: \
\
awk 'NR==FNR\{a[$1,$2]; next\} ($1,$2) in a' positions_asex PS1159.pileup > PS1159.corrected.pileup\
\pard\pardeftab720\ri-340\partightenfactor0
\cf0 \
\

\f1\b Using max con asex 80 ans max con sex 57 (when using 60 and 43 the asex pop didn\'92t have enough positions to be representative of the genome) 
\f0\b0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 Total positions asex: \cf2 \CocoaLigature0 48704  \cf0 \CocoaLigature1 \
Total positions sex: to be determined with new files: 
\fs22 \cf2 \CocoaLigature0 122138 
\fs24 \cf0 \CocoaLigature1 \
\
A.1.2 Watterson theta and pi estimation using corrected pileup files\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \CocoaLigature0 perl popoolation_1.2.2/Variance-sliding.pl --measure theta --input Sex_network/p_davidi.corrected.pileup --output Sex_network/p_davidi_WT.file --pool-size 3000 --min-count 2 --min-coverage 10 --max-coverage 80 --window-size 1 --step-size 1 --fastq-type sanger\cf0 \CocoaLigature1 \
 \cf2 \CocoaLigature0 \
perl popoolation_1.2.2/Variance-sliding.pl --measure pi --input Sex_network/p_davidi.corrected.pileup --output Sex_network/P_davidi_pi.file --pool-size 3000 --min-count 2 --min-coverage 10 --max-coverage 80 --window-size 1 --step-size 1 --fastq-type sanger\
\
A.1.3 Remove all \'93fake/empty\'94 positions, created by population, to only have meaningful results\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\ri-340\partightenfactor0
\cf0 \CocoaLigature1 awk '$4 !=\'930.000\'94\'92 pi_PS1579 > corrected_pi_PS1579\
\
A.1.4 Obtaining average values for watterson theta and pi \
\
awk '\{ total += $5; count++ \} END \{ print total/count \}' PS1159.pi\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \CocoaLigature0 For visualisation of results as violin plots, maps or fst distribution, codes were generated using R (see files: violin_R_WT.R, w1kb_pi_violin_plot.R, pi_box_plot.R. pi_map_plot.R and coverage script.R)\
\
Alternative theta estimation using Tetmer\
\pard\pardeftab720\partightenfactor0

\fs22 \cb3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
\cb1 kat hist -o DL137G2 Panagrolaimus_rawreads/DL137G2/SN7640087_3181_DL137G2_1_sequence.fq.gz Panagrolaimus_rawreads/DL137G2/SN7640087_3181_DL137G2_2_sequence.fq.gz \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \
Provide histogram to tetmer and obtain perkmer theta\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs36 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\qc\partightenfactor0

\f1\b \cf6 GENE NETWORK USING BUSCO GENES\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\qc\partightenfactor0

\fs24 \cf6 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf6 Grey boxes represent alternative approaches that were not implemented in the end. \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\qc\partightenfactor0
\cf6 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf11 \cb12 APPROACH 1 \'97> DIDN\'92T SEEM SO ACCURATE 
\f0\b0 \
\
1. Download set of Busco genes used in V4 for Nematoda: https://busco-data.ezlab.org/v4/data/lineages/. This includes sequences corresponding to 3131 busco genes from: \
Trichinella spiralis\
Caenorhabditis remanei\
Brugia malayi\
Necator americanus\
Caenorhabditis elegans\
Caenorhabditis briggsae\
Loa loa
\f1\b \

\f0\b0 \
2. Create a local database using Blast from our reference genomes to match the busco genes to. \
\
makeblastdb -in panagrolaimus_ps1159.PRJEB32708.WBPS15.genomic.fa -dbtype nucl\
\
3. Match protein sequence that corresponds to the downloaded Cusco genes (ancestral) to the reference genome database created in 1. \
\
tblastn -query Gene_network/nematoda_odb10/ancestral -db Reference_genomes/panagrolaimus_ps1159.PRJEB32708.WBPS15.genomic.fa -num_threads 4 -outfmt 6 >Gene_network/Buscos_in_PS1159\
\
**by using -outfmt 6 the output is in tabular form, later on we can use this format to select only the best match of the busco genes. \
\
Ancestral\'97> \expnd0\expndtw0\kerning0
\CocoaLigature1 FASTA file, consensus ancestral sequences for each BUSCO\kerning1\expnd0\expndtw0 \CocoaLigature0 \
\
4. Select only best match of busco genes agains ps1159\
\
awk \CocoaLigature1 '\CocoaLigature0 !seen[$1]++\CocoaLigature1 '\CocoaLigature0  Buscos_in_PS1159 > Besthits_buscos_PS1159\
\
3085 Best_hits_busco_PS1159\
\
5. Select ID\'92s of contains that gave best this to the busco genes\
\
cut -f2 Best_hits_busco_PS1159 | cut -f2 -d "|" >ID_besthits_PS1159_busco\
\
6. Grab from reference genome files those contigs defined in 3,4 and 5 using ID file to create a fasta file only with BUSCO genes found in PS1159. \
\
seqtk subseq Reference_genomes/panagrolaimus_ps1159.PRJEB32708.WBPS15.genomic.fa Gene_network/ID_besthits_PS1159_busco > Gene_network/ps1159_forBUSCOdb.fa \
\
Seqtk was installed using conda\
\
7. Create updated data base of just busco genes\
\
makeblastdb -in ps1159_forBUSCOdb.fa -dbtype nucl\cf2 \
\

\f1\b\fs28 \cf11 \cb1 APPROACH 2 \'97> THE ONE WE ACTUALLY FOLLOWED 
\f0\b0\fs24 \cf2 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf8 1. Run busco on the reference genomes to obtain complete genes that - done in Gvolante\
\
\pard\pardeftab720\partightenfactor0
\cf13 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 Summary of the Submitted Job:\cb1 \
\cb14 \'a0 \'a0 \'a0 \'a0 Job ID:\'a0 \'a0 202110281627-9NBARM9ZDMPG2VFR\cb1 \
\cb14 \'a0 \'a0 \'a0 \'a0 Project name:\'a0 \'a0 PS1159_refgenome\cb1 \
\cb14 \'a0 \'a0 \'a0 \'a0 Fasta file:\'a0 \'a0 panagrolaimus_ps1159.PRJEB32708.WBPS15.genomic.fa.fasta\cb1 \
\cb14 \'a0 \'a0 \'a0 \'a0 Cut-off length for sequence statistics and composition:\'a0 \'a0 1\cb1 \
\cb14 \'a0 \'a0 \'a0 \'a0 Sequence type:\'a0 \'a0 genome\cb1 \
\cb14 \'a0 \'a0 \'a0 \'a0 Selected program:\'a0 \'a0 BUSCO_v4\cb1 \
\cb14 \'a0 \'a0 \'a0 \'a0 Selected ortholog set:\'a0 \'a0 Nematoda\
\
\cf8 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf8 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 2. With the list obtained in 1 - blast output coordinates.tsv, the regions of interest were extracted from each bam file using (after indexing all files, otherwise it won\'92t work!!!):\
\
while read f; do samtools view -b JB051.sort.rmd.q30.bam $f >> $f".JB051.bam" ; done <list_genes \
\
Files must be afterwards sorted - the list used is \'93manually edited\'94 in Excel, the result from coordinates is in bed format, to use is as a list contig, start and end point need to be concatenated as one string. PSS159_contig1675 8 1943 \'97> PS1159_contig1675:8-1675 Excel command: (=B1&":"&C1&"-"&D1). \
\
3. Create pileup files with bcftools (\cf15 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 summarising the base calls of aligned reads to a reference sequence). The -A refers to paired-end data, needs to be specified as it isn\'92t default. \cf8 \cb3 \shad\shadx0\shady-20\shadr0\shado255 \shadc0 \
\pard\pardeftab720\partightenfactor0
\cf8 \shad\shadx0\shady-20\shadr0\shado255 \shadc0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \shad0 for n in *.bam.sort; do\
        bcftools mpileup -A -f panagrolaimus_ps1159.PRJEB32708.WBPS15.genomic.fa $n > $\{n%*.bam.sort\}_mpileup\
done\
\
\
for n in *.bam.sort; do\
        bcftools mpileup -A -f 
\fs22 \cf16 panagrolaimus_es5.PRJEB32708.WBPS16.genomic.fa.gz
\fs24 \cf2  $n > $\{n%*.bam.sort\}_mpileup\
done\
\
\
while read f, do bcftools mpileup -A -f 
\fs22 \cf16 panagrolaimus_es5.PRJEB32708.WBPS16.genomic.fa.gz
\fs24 \cf2  $n > $n\'94_mpileup\'94; done <list_bamsort\
\
\
4. Variant calling using pileup files. -Ov option will give an uncompressed vcf file as result, other options are available such as BCF of vcf.gz, but vcf is required for following steps. \
\
\
for n in *_mpileup ; do\
        bcftools call -mv -Ov $n > $\{n%*_mpileup\}.vcf\
done\
\
Note: usually steps 3 and 4 are performed as one command\cf8 \cb3  ```\expnd0\expndtw0\kerning0
\CocoaLigature1 bcftools mpileup -Ou -f reference.fa alignments.bam | bcftools call -mv -Ob -o calls.bcf\kerning1\expnd0\expndtw0 \CocoaLigature0 `\expnd0\expndtw0\kerning0
\CocoaLigature1 ``\shad\shadx0\shady-20\shadr0\shado255 \shadc0 \
\cf2 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \shad0 \
5. Create and index for each vcf file\
\pard\pardeftab720\partightenfactor0
\cb3 \
\pard\pardeftab720\partightenfactor0

\f2 \cf17 \expnd0\expndtw0\kerning0
\CocoaLigature1 for file in *.vcf; do 
\f0 \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 gatk-4.2.3.0/gatk
\f2 \cf17 \expnd0\expndtw0\kerning0
\CocoaLigature1  IndexFeatureFile -I $\{file\} -O $\{file\}.idx ; done\
\pard\pardeftab720\partightenfactor0

\f0 \cf2 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
6. \'93Manual\'94 editing. GATK wouldn\'92t take regions starting at position 0, but needed to be provided as position 1. All files were renamed when their position started with :0-.e.g. PS1159_contig1345
\f1\b :0-
\f0\b0 1928.ZZZ.ZZZ. \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\
for f in *:0-*; do mv -i -- "$f" "$\{f//:0-/:1-\}"; done \
\
7. Create a list with all positions now with all positions starting with 1. Or change same \'93word\'94 in list used in 2. \
\
8. Create index of fasta file \
\
samtools faidx panagrolaimus_ps1159.PRJEB32708.WBPS15.genomic.fa\
\
9. Create a dictionary for the reference genome\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf8 \cb18 gatk-4.2.3.0/gatk CreateSequenceDictionary -R panagrolaimus_ps1159.PRJEB32708.WBPS15.genomic.fa ****I AM CURRENTLY HERE WITH SEX NET***\cf2 \cb1 \
\
10. Create a consensus sequence, it takes the reference genome we mapped against -R, provide the output name we want for our file -O, the region from the reference genome that we want to have a consensus sequence from while using the reads present in this region -L and the VCF file  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf8 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \shad\shadx0\shady-20\shadr0\shado255 \shadc0 \
\pard\pardeftab720\partightenfactor0
\cf8 \shad\shadx0\shady-20\shadr0\shado255 \shadc0 (the list only contains the contain position as it is common between all strains, individual scripts were submitted for each strain to allow manual specification of files to be used as input e.g. \kerning1\expnd0\expndtw0 \CocoaLigature0 \shad0 $j.bcf.vcf where region is $j\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cf2 \cb1 while read f ;do gatk-4.2.3.0/gatk FastaAlternateReferenceMaker -R panagrolaimus_ps1159.PRJEB32708.WBPS15.genomic.fa -O $f.DL137G2.consensus.fa -L $f -V $f.DL137G2.vcf ; done<list-XX
\fs24 \cf8 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \shad\shadx0\shady-20\shadr0\shado255 \shadc0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 \shad0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cb1 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cb3 \
If not enough reads, or not at all are present in the define region (for example a consensus would end up as many NNNNNN), the consensus sequence is not created because there is not enough information within the region to work. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf8 \expnd0\expndtw0\kerning0
\CocoaLigature1 \shad\shadx0\shady-20\shadr0\shado255 \shadc0 \
\pard\pardeftab720\partightenfactor0

\f1\b \cf11 \cb12 \kerning1\expnd0\expndtw0 \CocoaLigature0 \shad0 ALTERNATIVE: FROM BAM FILES EXTRACT ONLY MAPPED READS AGAINS REFERENCE GENOME TO CREATE SHORTER FASTQ FILES (NO BACTERIAL OR CONTAMINATION  READS) TO DO ASSEMBLY ON COMMERCIAL SOFTWARE\
\pard\pardeftab720\partightenfactor0

\f0\b0 \cf11 \
1. Extract only mapped reads from bam file\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
\cf11 while read f; do samtools view -b -u -f 1 -F 12  $\{f\} >> $\{f\}".mapped" ; done <list_bamfiles\
\
2. Sort resulting bam files\
\
while read f; do samtools sort -n  $\{f\} >> $\{f\}".mapped" ; done <list_tosort\
\
3. Separating bam file into separate forward and reverse files that correspond ONLY to the mapped reads\
\
while read f; do bamToFastq view -i $\{f\} -fq $\{f\}\'94.forward" -fq2 $\{f\}".reverse"; done <list_toreads\
\
4. Repairing paired reads so they have appropriate order\
\
\pard\pardeftab720\partightenfactor0
\cf11 \expnd0\expndtw0\kerning0
\CocoaLigature1 \shad\shadx0\shady-20\shadr0\shado255 \shadc0 for i in `ls -1 *\kerning1\expnd0\expndtw0 \CocoaLigature0 \shad0 .sort.rmd.q30.bam.mapped.mapped.sorted.forward\expnd0\expndtw0\kerning0
\CocoaLigature1 \shad\shadx0\shady-20\shadr0\shado255 \shadc0  | sed \'92s/sort\kerning1\expnd0\expndtw0 \CocoaLigature0 \shad0 .rmd.q30.bam.mapped.mapped.sorted.forward\expnd0\expndtw0\kerning0
\CocoaLigature1 \shad\shadx0\shady-20\shadr0\shado255 \shadc0 //'`; do bbmap/repair.sh in1=$i\\\kerning1\expnd0\expndtw0 \CocoaLigature0 \shad0 .rmd.q30.bam.mapped.mapped.sorted.forward\expnd0\expndtw0\kerning0
\CocoaLigature1 \shad\shadx0\shady-20\shadr0\shado255 \shadc0  in2=$i\\\kerning1\expnd0\expndtw0 \CocoaLigature0 \shad0 rmd.q30.bam.mapped.mapped.sorted.reverse\expnd0\expndtw0\kerning0
\CocoaLigature1 \shad\shadx0\shady-20\shadr0\shado255 \shadc0  out1=$i\\_fixed_forward out2=$i\\_fixed_reverse outs=$i\\singletons repair; done\cf8 \shad\shadx0\shady-20\shadr0\shado255 \shadc0 \

\fs22 \shad\shadx0\shady-20\shadr0\shado255 \shadc0 \
\cb3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\fs24 \cf8 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \shad0 \
IMPORTANT!!!! Everytime I want to try loops for renaming or moving files y create trial folders with a small subset of files (copied there) to test the commands before running them on the actual files I need. This helps avoid making wrong transformations on files and requiring to run commands again (e.g. gatk) that require a long time to run\
\
10.1 How to rename files if your command had a wrong -O name: \
\cb3 \
\pard\pardeftab720\partightenfactor0
\cf8 \expnd0\expndtw0\kerning0
\CocoaLigature1 for file in *DL137G2.consensus*; do mv "$file" "$\{file//DL137G2/JB051\}\'94; done\
\
11. \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 Prepare files for the alignment, the header of each consensus sequence needs to be renamed so we can track from which strain it is coming from once we do the alignment. This command runs inside the folder of each strain \
\pard\pardeftab720\partightenfactor0

\f2 \cf19 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\partightenfactor0

\f0 \cf8 \shad\shadx0\shady-20\shadr0\shado255 \shadc0 for FILE in *.fa;do awk '/^>/ \{gsub(/.fa?$/,"",FILENAME);printf(">%s\\n",FILENAME);next;\} \{print\}' $FILE >>changed_$\{FILE\}; done\
\pard\pardeftab720\partightenfactor0

\fs22 \cf8 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \shad0 \
12. Get list of all consensus sequences present in all strains\
\
12.1 Obtain list of fasta file consensus from each folder/strain\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cf2 ls DL137G2/changed_* | sed 's/DL137G2\\///g'> list_DL137G2\
\
DL137G2 can be change in each case for the name of folder/strain\
\
12.2 All lists where transferred to excel as one column, manual editing to just have the information on gene location was done using find&replace, then the duplicate function was used and only those positions present in ALL columns were kept and a new file was created: \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf8 \
375_genes\
\
12.3 With a loop using the file created in 12.2, I copied all gene files from each strain to a new folder \
\
\pard\pardeftab720\partightenfactor0
\cf8 while read f; do cp try/$f* try_2/$f.DL137G2; done < \cf2 375_genes\
\
12.4 Put together all the files from one gene into one file for the mafft alignment\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
 while read f; do cat $f* >> $f\'94_for_mafft\'94 ; done < 375_genes\
\pard\pardeftab720\partightenfactor0
\
12.5 Check some files to make sure that you have all 7 headers from the 7 strains \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
ls *mafft | head -n 10 \
\
grep -o '>' changed_PS1159_contig10078:2915-14059_for_mafft | wc -l \'97> 7 should be the output in this case\
\
You can also check the headers themselves \
\
 grep '>' changed_PS1159_contig10078:2915-14059_for_maff \
\
The output looks like: 7 lines each with the name of the position the files refers to swell as the strain to which a sequence corresponds\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b \cf20 >
\f0\b0 \cf2 PS1159_contig10078:2915-14059.DL137G2.consensus\

\f1\b \cf20 >
\f0\b0 \cf2 PS1159_contig10078:2915-14059.JB051.consensus\

\f1\b \cf20 >
\f0\b0 \cf2 PS1159_contig10078:2915-14059.p_davidi.consensus\

\f1\b \cf20 >
\f0\b0 \cf2 PS1159_contig10078:2915-14059.PS1159.consensus\

\f1\b \cf20 >
\f0\b0 \cf2 PS1159_contig10078:2915-14059.PS1162.consensus\

\f1\b \cf20 >
\f0\b0 \cf2 PS1159_contig10078:2915-14059.PS1579.consensus\

\f1\b \cf20 >
\f0\b0 \cf2 PS1159_contig10078:2915-14059.PS1806.consensus\
\
 All files where moved to a folder named \'93mafft_files\'94. \
 \
13. To run mafft (on cheops1) first do:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf8 \cb3 module use /opt/rrzk/modules/experimental\
module load mafft/7.471\
\
\pard\pardeftab720\partightenfactor0
\cf8 \expnd0\expndtw0\kerning0
\CocoaLigature1 \shad\shadx0\shady-20\shadr0\shado255 \shadc0 parallel -j 8 'mafft \{\} > \{.\}.aligned.fasta' ::: *_for_mafft\
\pard\pardeftab720\partightenfactor0

\f3 \cf21 \shad\shadx0\shady-20\shadr0\shado255 \shadc0 \
\pard\pardeftab720\partightenfactor0

\f0 \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 \shad0 14.concatenate alignments to one file to create gene network\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cb1 #!/bin/bash -l\
#SBATCH --nodes=1\
#SBATCH --ntasks=1\
#SBATCH --error=/scratch/lvilleg1/jobs/err_out/concat_alig.err\
#SBATCH --output=/scratch/lvilleg1/jobs/err_out/concat_alig.out\
#SBATCH --mem=20GB\
#SBATCH --time=10:00:00\
#SBATCH --account=AG-Schiffer
\fs24 \cb3 \
\pard\pardeftab720\partightenfactor0
\
module purge\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cb1 cd /scratch/lvilleg1/Sex_network/bam_processed_files/bams_pergene/mafft_files
\fs24 \cb3 \
\pard\pardeftab720\partightenfactor0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cb1 changed_PS1159_contig10003:1-9790_for_mafft.aligned.fasta changed_PS1159_contig10034:4548-15117_for_mafft.aligned.fasta changed_PS1159_contig10034:4728-15036_for_mafft.aligned.fasta changed_PS1159_contig10034:4782-14919_for_mafft.aligned.fasta > 4genes_fornetwork\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cb3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cb1 changed_PS1159_contig10003:1-9790_for_mafft.aligned.fasta = 1-9840\
changed_PS1159_contig10034:4548-15117_for_mafft.aligned.fasta = 9841-20456\
changed_PS1159_contig10034:4728-15036_for_mafft.aligned.fasta = 20457-30811\
changed_PS1159_contig10034:4782-14919_for_mafft.aligned.fasta = 30812-40995\
changed_PS1159_contig10041:13705-25249_for_mafft.aligned.fasta = 40996-52582\
changed_PS1159_contig10057:1-5562_for_mafft.aligned.fasta = 52583-58234\
changed_PS1159_contig10057:1-5637_for_mafft.aligned.fasta = 58235-63961\
changed_PS1159_contig10070:1-12934_for_mafft.aligned.fasta = 63962-76954\
changed_PS1159_contig10078:1560-12264_for_mafft.aligned.fasta = 76955-87692\
changed_PS1159_contig10078:2915-14059_for_mafft.aligned.fasta = 87693-98883\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cb3 \
\pard\pardeftab720\partightenfactor0
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cb1 \
\pard\pardeftab720\partightenfactor0
\cf8 \
\
\pard\pardeftab720\qc\partightenfactor0

\f1\b \cf8 GENOME ASSEMBLY OF HiFi reads\
\pard\pardeftab720\partightenfactor0
\cf8 \
A. Assemblers to be tried: \
\
1. HiCanu: on Cheops 0 to load required version of git and gcc CANU v.2.3\
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 module load git/2.17.0\
module load gnu/7.4.0\
\pard\pardeftab720\partightenfactor0

\f2\b0 \cf22 \expnd0\expndtw0\kerning0
\CocoaLigature1   git clone https://github.com/marbl/canu.git\
  cd canu/src\
  make -j <number of threads>\
.
\f0 \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 /scratch/lvilleg1/canu/build/bin/canu
\f2 \cf22 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\partightenfactor0

\f1\b \cf8 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
2. Flye 2.7.1\
\
\pard\pardeftab720\partightenfactor0

\f2\b0 \cf5 \expnd0\expndtw0\kerning0
\CocoaLigature1 Flye is available on Cheops0 in 
\f0 \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 /opt/rrzk/software - it can be loaded as module load flye/2.7.1_intel\
\pard\pardeftab720\partightenfactor0

\f1\b \cf8 \
3. Hifiasm 
\f0\b0\fs22 \cf2 \cb1 0.16.1-r375
\f1\b\fs24 \cf8 \cb3 \
\pard\pardeftab720\partightenfactor0

\f0\b0 \cf8 \
\pard\pardeftab720\partightenfactor0

\f2 \cf22 \expnd0\expndtw0\kerning0
\CocoaLigature1 git clone https://github.com/chhylp123/hifiasm\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0 \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 ./hifiasm/hifiasm\
\pard\pardeftab720\partightenfactor0

\f2 \cf23 \expnd0\expndtw0\kerning0
\CocoaLigature1 cd\cf22  hifiasm \cf24 &&\cf22  make\
\
\pard\pardeftab720\partightenfactor0

\f4\fs28 \cf5 \cb14 awk '$1 ~/S/ \{print ">"$2"\\n"$3\}' reads.gfa > reads.fasta
\f2\fs24 \cf22 \cb3 \
\
\pard\pardeftab720\partightenfactor0

\f5\b \cf22 4. WTDBG2 \

\f2\b0\fs27\fsmilli13600 \cf8 git clone https://github.com/ruanjue/wtdbg2\
cd wtdbg2 && make
\fs24 \cf22 \
\
\
./
\f0\fs22 \cf2 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 wtdbg2/wtdbg2.pl\
\
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf22 \cb25 \expnd0\expndtw0\kerning0
\CocoaLigature1 ./wtdbg2.pl -t 16 -x rs -g 4.6m -o dbg reads.fa.gz
\fs24 \cb3 \
\pard\pardeftab720\partightenfactor0

\f5\b \cf22 B. Assessing Kmers: genome size estimation \
\
1. Using BBMap kmercount exact (check peaks file) Bbmap version 38.94\
K27\
ES5\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0\fs22 \cf2 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 bbmap/kmercountexact.sh qin=33 k=27 in=HiFi_reads/ES5/m54274Ue_211114_223525.hifi_reads.fastq.gz khist=ES5_bbmaphistk27.txt peaks=ES5_bbmaopeaks27.txt -Xmx3600M\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 Estimated genome seize: \cf2 \cb1 1223327382 - 1Gb\cf8 \cb3 \
\
\pard\pardeftab720\partightenfactor0

\f1\b \cf8 \cb1 PS1146\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 \cf2 bbmap/kmercountexact.sh qin=33 k=27 in=HiFi_reads/\cf26 PS1146/m54274Ue_211112_020939.hifi_reads.fastq.gz \cf2 khist=PS1146_bbmaphistk27.txt peaks=PS1146_bbmaopeaks27.txt -Xmx3600M\cf8 \
\pard\pardeftab720\partightenfactor0
\cf8 Estimated genome size \cf2 627931042 - 627 M\
\
K21\
\
ES5 1184107411\
PS1146 613109607\cf8 \
\
\pard\pardeftab720\partightenfactor0

\f1\b \cf8 2. Using KAT and \
\
2.1 Genomescope\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 \cf2 kat hist -o ES5_kat227 HiFi_reads/ES5/m54274Ue_211114_223525.hifi_reads.fastq.gz\
K21\
ES5 \
PS1146\
\
K27 \
ES5 796M\
PS1146 550M\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b 2.2. findGSE\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 findGSE(histo="PS1146_kat31", sizek=27, outdir="PS1146_27mer")\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b K27\
Genome size estimate for PS1146_kat31: 984951018 bp.\
Genome size estimate for ES5_kat31: 1339268914 bp.
\f0\b0 \
\
K21\
\

\f1\b B. Assembly after checking genome size and kmer spectra \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf8 kat comp -t 8 -o kat140_ES5_hifiasm HiFi_reads/ES5/m54274Ue_211114_223525.hifi_reads.fastq.gz ES5_hifiasm/PES5_primary_contigs_hifiasm.fa\
kat plot spectra-cn -o PS1146_flye_comp kat140_PS1146_flye-main.mx\cf2 \
\
\
hifiasm_primary.fasta \
\cf8 \
\
\
\pard\pardeftab720\partightenfactor0

\f6\fs24 \cf0 \expnd0\expndtw0\kerning0
\CocoaLigature1 salloc -p smp-rh7  --ntasks=16 --cpus-per-task=1 --time=160:00:00 --mem=120gb\
srun --pty bash\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 ./canu/build/bin/canu -p HiFi_reads/PS1146/PS1146_canu genomeSize=500m -d HiFi_reads/ -maxThreads=16 -maxMemory=120g -pacbio-hifi useGrid=false HiFi_reads/PS1146/m54274Ue_211112_020939.hifi_reads.fastq.gz 
\f6\fs24 \cf0 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 ./canu/build/bin/canu -p ES5_canu genomeSize=1g -d HiFi_reads/ -maxThreads=16 -maxMemory=80g useGrid=false -pacbio-hifi HiFi_reads/ES5/m54274Ue_211114_223525.hifi_reads.fastq.gz\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf8 \cb3 \
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf8 \expnd0\expndtw0\kerning0
\CocoaLigature1 wtpoa-cns -t 16 -i 
\f0\fs22 \kerning1\expnd0\expndtw0 \CocoaLigature0 PS1146_redbean.ctg.lay.gz 
\f2\fs27\fsmilli13600 \expnd0\expndtw0\kerning0
\CocoaLigature1 -fo PS1146_redbean.raw.fa\
\
\
minimap2 -t16 -ax map-pb -r2k PS1146_redbean.raw.fa HiFi_reads/PS1146/
\f0\fs22 \kerning1\expnd0\expndtw0 \CocoaLigature0 m54274Ue_211112_020939.hifi_reads.fastq.gz 
\f2\fs27\fsmilli13600 \expnd0\expndtw0\kerning0
\CocoaLigature1 | samtools sort -@4 >PS1146_redbean.bam\
samtools view -F0x900 PS1146_redbean.bam | wtpoa-cns -t 16 -d PS1146_redbean.raw.fa -i - -fo PS1146_readbean.cns.fa\
\
\
\pard\pardeftab720\partightenfactor0

\f0\fs22 \cf8 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 module load git/2.17.0\
module load gnu/7.4.0\
module load openjdk/1.8.0_202\
\
\
\
wtdbg2 -t 8 -x ccs -g 300m -fo PS1146_redbean -i HiFi_reads/PS1146/m54274Ue_211112_020939.hifi_reads.fastq.g\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cb3 \
\
To run jobs on motoko: 
\fs22 \cb1 nohup sh xx.sh > log &\
ssh schiffer@bast-work-1.zoologie.uni-koeln.de\
Password: schiffer123\
\
\
\
To install blobtoolskit on Cheops1\
\
module purge\
module load miniconda\
eval "$(conda shell.bash hook)"\
\
\
# Use Conda to install remaining dependencies\
conda create -n btk_env -c conda-forge -y python=3.6 docopt psutil pyyaml ujson tqdm nodejs=10 yq;\
conda activate btk_env;\
conda install -c bioconda -y pysam seqtk;\
conda install -c conda-forge -y geckodriver selenium pyvirtualdisplay;\
pip install fastjsonschema;
\fs26 \cf21 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\partightenfactor0
\cf21 \
mkdir -p ~/blobtoolkit;\
cd ~/blobtoolkit;\
git clone\'a0{\field{\*\fldinst{HYPERLINK "https://github.com/blobtoolkit/blobtools2"}}{\fldrslt \cf27 https://github.com/blobtoolkit/blobtools2}};\
git clone\'a0{\field{\*\fldinst{HYPERLINK "https://github.com/blobtoolkit/viewer"}}{\fldrslt \cf27 https://github.com/blobtoolkit/viewer}};\
git clone\'a0{\field{\*\fldinst{HYPERLINK "https://github.com/blobtoolkit/specification"}}{\fldrslt \cf27 https://github.com/blobtoolkit/specification}};\
git clone\'a0{\field{\*\fldinst{HYPERLINK "https://github.com/blobtoolkit/insdc-pipeline"}}{\fldrslt \cf27 https://github.com/blobtoolkit/insdc-pipeline}};\
\
cd viewer;\
npm install;\
cd ..;\
\
\
inside the btk_env environment in the folder \
/blobtoolkit/viewer:\
\
\
npm audit fix  \
\
and then inside \
blobtoolkit/blobtools2: \
\
\
do pip install -r requirements.txt --ignore-installed certifi\
\
\
CREATE database\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cf2 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 ./blobtoolkit/blobtools2/blobtools create --fasta ES5_hifiasm/ES5_primary_contigs_hifiasm.fa ES5_hifiasm/Dataset_blob/\
\
ADD BUSCO to database
\fs26 \cf21 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\partightenfactor0

\fs24 \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cb1 ./blobtoolkit/blobtools2/blobtools add --busco blobtools_info/ES5_hifiasm.busco.nematoda_odb10.tsv blobtools_info/ES5_hifiasm\
\
While running add busco, the .tsv file is the one obtained while running busco on gvolante. It requires bit of manual editing, like changing the contigs names so they match that of the assembly and removing missing genes so all contigs match the identifiers defined while creating the database\
\
\
ADD hits to database - first you need to run blast \
\
blastn -db blobtools_info/nt/nt \\\
       -query ES5_hifiasm/ES5_primary_contigs_hifiasm.fa \\\
       -outfmt '6 qseqid staxids bitscore std' \\\
       -max_target_seqs 10 \\\
       -max_hsps 1 \\\
       -evalue 1e-25 \\\
       -num_threads 32 \\\
       -out ES5_hifiasm.ncbi.blastn.out\
\
\
ADD COVERAGE to database\
\
\pard\pardeftab720\partightenfactor0

\f2\fs27\fsmilli13600 \cf8 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 minimap2 -ax map-hifi
\f0\fs26  \\\
         -t 32 
\fs22 \kerning1\expnd0\expndtw0 \CocoaLigature0 ES5_hifiasm/ES5_primary_contigs_hifiasm.fa
\fs26 \expnd0\expndtw0\kerning0
\CocoaLigature1  \\\
         
\fs22 \kerning1\expnd0\expndtw0 \CocoaLigature0 HiFi_reads/ES5/m54274Ue_211114_223525.hifi_reads.fastq.gz
\fs26 \expnd0\expndtw0\kerning0
\CocoaLigature1  \\\
| samtools sort -@32 -O BAM -o ES5_hifiasm.mapped.bam -\
\pard\pardeftab720\partightenfactor0

\fs22 \cf2 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
./blobtoolkit/blobtools2/blobtools add --cov ES5_hifiasm.mapped.bam ES5_hifiasm/Dataset_blob/\
\
\
--cov ES5_hifiasm.mapped.bam\
\
--busco blobtools_info/ES5_hifiasm.busco.metazoa_odb10.tsv ES5_hifiasm/Dataset_blob/ -busco blobtools_info/ES5_hifiasm.busco.nematoda_odb10.tsv\
\pard\pardeftab720\partightenfactor0
\
\pard\pardeftab720\partightenfactor0

\fs24 \cb3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs22 \cb1 ./blobtoolkit/blobtools2/blobtools add 
\f2\fs24 \cf22 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1 --taxrule bestsumorder \\\
\pard\pardeftab720\partightenfactor0
\cf22 	--taxdump /blobtools_info/taxdump/ \\\
	--cov 
\f0\fs22 \cf2 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 filtered_PS1146_hifiasm.mapped.bam
\f2\fs24 \cf22 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1  \\\
	--hits 
\f0\fs22 \cf2 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 filtered_PS1146_hifiasm.ncbi.blastn.out
\f2\fs24 \cf22 \cb3 \expnd0\expndtw0\kerning0
\CocoaLigature1  \\\
	
\f0\fs22 \cf28 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 filt_blob_ps1146
\fs24 \cf2 \cb3 \
\
\pard\pardeftab720\partightenfactor0

\fs22 \cb1 \
After visualising the results with blob tools the csv file with taxa and matching contigs can be downloaded to only select those contigs that do not match bacteria. A list with this contigs is then used to keep a file in fasta format with nematode contigs. With area selection on the blob plot you can get those contigs that don\'92t contain bacteria. \
We now filter the raw reads to re-assembly without bacteria. \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
./blobtoolkit/blobtools2/blobtools filter --param bestsumorder_phylum--Keys=Proteobacteria,Bacteroidetes,Actinobacteria,Chordata,Uroviricota 
\f7\fs24 \cf8 \expnd0\expndtw0\kerning0
\CocoaLigature1 --fastq 
\f0\fs22 \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 HiFi_reads/ES5/\cf26 m54274Ue_211114_223525.hifi_reads.fastq.gz  \'97cov ES5_hifiasm/\cf2 ES5_hifiasm.mapped.bam ES5_hifiasm/Dataset_blob\
\
\
The resulting file is .fastq.filtered.gz and it has to be smaller than the original raw reads\
\
\
Common assembly commands \
\
FLYE\
\
flye --pacbio-hifi HiFi_reads/ES5/m54274Ue_211114_223525.hifi_reads.filtered.fastq.gz --out-dir HiFi_reads/ --threads 32 --asm-coverage 50 --genome-size 200m\
\
\
HIFIASM\
./hifiasm/hifiasm -o 2filtered_PS1146_hifiasm -t 16  HiFi_reads/ES5/m54274Ue_211114_223525.hifi_reads.filtered.fastq.gz\
\
\
WTDBG2\
\
wtdbg2 -t 8 -x ccs -g 300m -fo PS1146_redbean -i HiFi_reads/PS1146/m54274Ue_211112_020939.hifi_reads.fastq.g\
wtpoa-cns -t 16 -i PS1146_redbean.ctg.lay.gz -fo PS1146_redbean.raw.fa\
minimap2 -t16 -ax map-pb -r2k PS1146_redbean.raw.fa HiFi_reads/PS1146/m54274Ue_211112_020939.hifi_reads.fastq.gz | samtools sort -@4 >PS1146_redbean.bam\
samtools view -F0x900 PS1146_redbean.bam | wtpoa-cns -t 16 -d PS1146_redbean.raw.fa -i - -fo PS1146_readbean.cns.fa\
\
\
For purging assemblies - removing regions that are called duplicates but might be a highly heterozygous region \
\
\
conda activate pbmarkdup\
pbmarkdup --rmdup -j 8 filtered_hifiasm_ES5/2filtered_ES5_hifiasm.fasta filtered_hifiasm_ES5/2filtered_ES5_hifiasm.rmdduplicates.fasta\
\
\
\
Gene annotation \
\
conda activate /opt/rrzk/software/conda-envs/braker2\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f8 \

\f0 cp
\f8  
\f0 -r
\f8  
\f0 /opt/rrzk/software/conda-envs/braker
\f8 2
\f0 /config/
\f8  
\f0 scratch/lvilleg1/\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b For PS1146
\f0\b0 \
Prediction: \
\
augustus --species=caenorhabditis 2filtered_PS1146_hifiasm.purged.fa  > annotation_trial_PS1146.gff\
module load blast+/2.10.0\
\
Extract coding sequences:\
\
\pard\pardeftab720\partightenfactor0

\f3\fs23\fsmilli11700 \cf29 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 getAnnoFasta.pl --seqfile=genome.fa aug.out\
\
Blast coding sequences: \
\pard\pardeftab720\partightenfactor0

\f0\fs22 \cf2 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
tblastn -db blobtools_info/nt/nt \\\
       -query annotation_trial_PS1146.aa \\\
       -outfmt "6 qseqid staxids bitscore std" \\\
       -max_target_seqs 1 \\\
       -max_hsps 1 \\\
       -evalue 1e-25 \\\
       -num_threads 8 \\\
       -out PS1146_proteins.blastn.out\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b For ES5 - with braker2
\f0\b0 \
\
1. Allgin rna-seq data from NCBI to my assembly \
2. Make assembly for repeats repeatmodeler repeat masker\
\
module load repeatmodeler/\
module load repeatmasker/\
\
\
\
\
\
3. \
\
\
SPLIT NETWORKS FROM SEQUENCES SHOULD BE MEDIAN NETWORKS, IT IS RECOMMENDED FOR WHEN VERY FEW DIFFERENCE ARE PRESENT. ANY COLUMN IN THE ALIGNMENT THAT HAS TWO DIFFERENT CHARACTER STATES DEFINES A SPLIT OF THE TAXON SET. MEDIAN NETWORKS ARE MAINLY USED IN PHYLOGEOGRAPHY AND POPULATION STUDIES\
\
Worm.Lab-deserts_22-24!\
\
Try the mapping with snap to see if this was the problem with braker2\
\
gmap_build -D -d genome_index 2filtered_ES5_hifiasm.purged.fa  \
\
gsnap -d genome_index -A sam -o ES5_RNA_seq_gsnap.mapped.sam  ES5_RNA_seq.fastq\
\
\
Masking \
\pard\pardeftab720\partightenfactor0

\f9\fs36 \cf21 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 De-novo repeat family identification
\f0\fs22 \cf2 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\
BuildDatabase -name ES5_gene_DB 2filtered_ES5_hifiasm.purged.fa\
\
RepeatModeler -pa 16 -database ES5_gene_DB\
\
\pard\pardeftab720\partightenfactor0

\f9\fs28 \cf21 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 Classify files for preperation of the database for RepeatMasker\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 RepeatClassifier -consensi ES5_gene_DB-families.fa\
\
\
\pard\pardeftab720\partightenfactor0

\f9\fs36 \cf21 \cb14 \expnd0\expndtw0\kerning0
\CocoaLigature1 Repeat masking with RepeatMasker
\f0\fs22 \cf2 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\
}